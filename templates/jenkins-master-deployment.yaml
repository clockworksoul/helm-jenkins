apiVersion: extensions/v1beta1
kind: Deployment
metadata:
  name: {{ template "jenkins.fullname" . }}
  labels:
    app: {{ template "jenkins.fullname" . }}
    chart: "{{ .Chart.Name }}-{{ .Chart.Version }}"
    heritage: {{ .Release.Service | quote }}
    release: {{ .Release.Name | quote }}
    component: "{{ .Release.Name }}-{{ .Values.master.name }}"
spec:
  replicas: 1
  strategy:
    type: RollingUpdate
  selector:
    matchLabels:
      component: "{{ .Release.Name }}-{{ .Values.master.component }}"
  template:
    metadata:
      labels:
        app: {{ template "jenkins.fullname" . }}
        heritage: {{ .Release.Service | quote }}
        release: {{ .Release.Name | quote }}
        chart: "{{ .Chart.Name }}-{{ .Chart.Version }}"
        component: "{{ .Release.Name }}-{{ .Values.master.component }}"
      annotations:
        checksum/config: {{ include (print $.Template.BasePath "/config.yaml") . | sha256sum }}
    spec:
      {{- if .Values.master.nodeSelector }}
      nodeSelector:
{{ toYaml .Values.master.nodeSelector | indent 8 }}
      {{- end }}
      {{- if .Values.master.tolerations }}
      tolerations:
{{ toYaml .Values.master.tolerations | indent 8 }}
      {{- end }}
      securityContext:
        runAsUser: 0
      serviceAccountName: {{ if .Values.rbac.install }}{{ template "jenkins.fullname" . }}{{ else }}"{{ .Values.rbac.serviceAccountName }}"{{ end }}
      initContainers:
        - name: "copy-default-config"
          image: "{{ .Values.master.image.repository }}:{{ .Values.master.image.tag }}"
          imagePullPolicy: "{{ .Values.master.image.pullPolicy }}"
          command: [ "sh", "/var/jenkins_config/apply_config.sh" ]
          volumeMounts:
            - mountPath: /var/jenkins_home
              name: jenkins-home
            - mountPath: /var/jenkins_config
              name: jenkins-config
            - mountPath: /usr/share/jenkins/ref/plugins/
              name: plugin-dir
            - mountPath: /usr/share/jenkins/ref/secrets/
              name: secrets-dir
            {{- if .Values.master.secretKeyName }}
            - mountPath: /usr/share/jenkins/ref/keys/
              name: ssh-keys
            {{- end }}
      containers:
        - name: {{ template "jenkins.fullname" . }}
          image: "{{ .Values.master.image.repository }}:{{ .Values.master.image.tag }}"
          imagePullPolicy: "{{ .Values.master.image.pullPolicy }}"
          {{- if .Values.master.useSecurity }}
          args: [ "--argumentsRealm.passwd.$(ADMIN_USER)=$(ADMIN_PASSWORD)",  "--argumentsRealm.roles.$(ADMIN_USER)=admin"]
          {{- end }}
          env:
            - name: JAVA_OPTS
              value: "{{ default "" .Values.master.javaOpts}}"
            - name: JENKINS_OPTS
              value: "{{ if .Values.master.jenkinsUriPrefix }}--prefix={{ .Values.master.jenkinsUriPrefix }} {{ end }}{{ default "" .Values.master.jenkinsOpts }}"
            {{- if .Values.master.useSecurity }}
            - name: ADMIN_PASSWORD
              valueFrom:
                secretKeyRef:
                  name: {{ template "jenkins.fullname" . }}-admin
                  key: jenkins-admin-password
            - name: ADMIN_USER
              valueFrom:
                secretKeyRef:
                  name: {{ template "jenkins.fullname" . }}-admin
                  key: jenkins-admin-user
            {{- end }}
          ports:
            - containerPort: {{ .Values.master.containerPort }}
              name: http
            - containerPort: {{ .Values.master.slaveListenerPort }}
              name: slavelistener
            {{- if .Values.master.jmxPort }}
            - containerPort: {{ .Values.master.jmxPort }}
              name: jmx
            {{- end }}
          resources:
{{ toYaml .Values.master.resources | indent 12 }}
          volumeMounts:
{{- if .Values.persistence.mounts }}
{{ toYaml .Values.persistence.mounts | indent 12 }}
{{- end }}
            - mountPath: /var/jenkins_home
              name: jenkins-home
              readOnly: false
            - mountPath: /var/jenkins_config
              name: jenkins-config
              readOnly: true
            - mountPath: /usr/share/jenkins/ref/plugins/
              name: plugin-dir
              readOnly: false
            - mountPath: /usr/share/jenkins/ref/secrets/
              name: secrets-dir
              readOnly: false
            {{- if .Values.master.secretKeyName }}
            - mountPath: /usr/share/jenkins/ref/keys/
              name: ssh-keys
              readOnly: false
            {{- end }}
      volumes:
{{- if .Values.persistence.volumes }}
{{ toYaml .Values.persistence.volumes | indent 6 }}
{{- end }}
      - name: jenkins-config
        configMap:
          name: {{ template "jenkins.fullname" . }}
      - name: plugin-dir
        emptyDir: {}
      - name: secrets-dir
        emptyDir: {}
      - name: jenkins-home
      {{- if .Values.persistence.enabled }}
        persistentVolumeClaim:
          claimName: {{ .Values.persistence.existingClaim | default (include "jenkins.fullname" .) }}
      {{- else }}
        emptyDir: {}
      {{- end -}}
      {{- if .Values.master.secretKeyName }}
      - name: ssh-keys
        secret:
          secretName: {{ .Values.master.secretKeyName }}
      {{- end }}
{{- if .Values.master.image.pullSecret }}
      imagePullSecrets:
      - name: {{ .Values.master.image.pullSecret }}
{{- end -}}
